var IS_NODE=!!(typeof module!=="undefined"&&module.exports);var Gerbil=function(c,b,a){this.success=0;this.failures=0;this.count=0;this.assertions=0;this.timeout=0;this.queue=new Gerbil.Queue;this.description=c;this.tests=b;this.pretty_console={log:function(d){return console.log("\033[32m"+d+"\033[0m")},info:function(d){return console.info("\033[34m"+d+"\033[0m")},warn:function(d){return console.warn("\033[33m"+d+"\033[0m")},error:function(d){return console.error("\033[31m"+d+"\033[0m")}};this.logger=typeof(a)=="object"?a:IS_NODE?this.pretty_console:window.console;this.extract_test=function(d){var e=this.tests[d];delete this.tests[d];return e||function(){}};this.execute=function(h,g){try{var d=h.name;var h=h.fn;h.call(g,this);this.ok(d)}catch(f){this.fail(d+" ("+f+")")}finally{if((this.success+this.failures)==this.count){var e=this;setTimeout(function(){this.summary()}.apply(e),this.timeout)}}};this.ok=function(d){this.success++;this.logger.log("   * "+d+" ("+this.assertions+" assertions)")};this.fail=function(d){this.failures++;this.logger.error("   x "+d)};this.enqueue=function(){this.logger.info("== Running "+this.description+" ==");this.setup=this.extract_test("setup");this.before=this.extract_test("before");this.after=this.extract_test("after");this.cleanup=this.extract_test("cleanup");for(var d in this.tests){this.queue.push({name:d,fn:this.tests[d],time:new Date().getTime()});this.count++}};this.consume=function(){var e=false;var d={};this.setup.call(d,this);while(e=this.queue.pull()){this.before.call(d,this);this.execute(e,d);this.after.call(d,this)}this.cleanup.call(d,this)};this.summary=function(){this.logger.warn("All tests completed: "+this.success+" passed, "+this.failures+" failed of "+this.count+" tests");this.logger.info("")}};Gerbil.Error=function(b){var a=new Error(b);return a.stack||a.message};Gerbil.Queue=function(){this.queue=[];this.offset=0;this.length=function(){return this.queue.length-this.offset};this.push=function(a){this.queue.push(a)};this.pull=function(){if(this.queue.length===0){return}var a=this.queue[this.offset];if(++this.offset*2>=this.queue.length){this.queue=this.queue.slice(this.offset);this.offset=0}return a}};Gerbil.prototype={set_timeout:function(c,a){var b=this;this.timeout+=a;return setTimeout(function(){c.apply(b)},a)},pending:function(a){return this.logger.warn("   ! "+a)},assert:function(a){this.assertions++;if(!a){throw Gerbil.Error("Assertion Failed")}},assert_throw:function(d,c){this.assertions++;var b=false;try{c();b=d.name+" was expected but not raised."}catch(a){if(typeof a==typeof d){b=d.name+" was expected but "+a.name+" was raised."}}if(b){throw Gerbil.Error(b)}},assert_equal:function(c,a){if(c==undefined||a==undefined){throw Gerbil.Error("attr1 = "+c+" ("+typeof c+") and attr2 = "+a+" ("+typeof a+")")}if(typeof(c)!=typeof(a)){throw Gerbil.Error("Different type "+typeof c+" vs "+typeof a)}this.assertions++;switch(c.constructor){case Array:if(c.length!=a.length){throw Gerbil.Error("Different Lengths")}for(var b=0;b<c.length;b++){if(c[b]!=a[b]){throw Gerbil.Error("Items not equal "+c[b]+" != "+a[b])}}break;case String,Number:if(c!=a){throw Gerbil.Error("Not equal "+c+" != "+a)}break}},};var scenario=function(c,b,a){current_scenario=new Gerbil(c,b,a);current_scenario.enqueue();current_scenario.consume()};if(IS_NODE){module.exports=scenario};